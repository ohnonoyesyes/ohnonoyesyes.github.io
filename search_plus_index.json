{"./":{"url":"./","title":"Introduction","keywords":"","body":"简介简介 WeLearn旨在收集，分享，整理安全知识，帮助广大安全爱好者快速学习，逐渐积累所学，最终学有所成。 Copyright © 2022 WeLearn. All rights reserved. all right reserved，powered by Gitbook文章最后修改于 2022-04-04 13:25:30 "},"CTF/":{"url":"CTF/","title":"CTF","keywords":"","body":"CTFCTF 整理分享一些有关CTF的题目WriteUp，帮助大家开拓思路 Copyright © 2022 WeLearn. All rights reserved. all right reserved，powered by Gitbook文章最后修改于 2022-04-04 10:31:34 "},"CTF/2017_0CTF_simplesqlin.html":{"url":"CTF/2017_0CTF_simplesqlin.html","title":"2017 0 CTF Simplesqlin","keywords":"","body":"2017 0CTF simplesqlin前言详解后记2017 0CTF simplesqlin [摘自]：https://www.yulegeyu.com/2017/03/30/2017-0CTF-simplesqlin/ 前言 没打0ctf, 但是在看大佬们的writeup的时候发现了这道题。 当时就觉得这个绕过莫名其妙, 不知道是怎么写的过滤。 看了几个博客, 好像都不太清楚绕过的原理,就这样测了下就绕过去了。 不过,当看到这题的flag之后,就大概知道为什么在payload之间插入%00这种可以绕过了。flag是flag{W4f_bY_paSS_FOR_CI} 也就是waf bypass for ci, 也就是用了ci框架清除一些字符的特性来bypass了waf. 详解 在system/core/Input.php的构造方法中 public function __construct(){ 省略 $this->_sanitize_globals(); //净化全局变量, } protected function _sanitize_globals(){ // Is $_GET data allowed? If not we'll set the $_GET to an empty array if ($this->_allow_get_array === FALSE) { $_GET = array(); } elseif (is_array($_GET)) { foreach ($_GET as $key => $val) { $_GET[$this->_clean_input_keys($key)] = $this->_clean_input_data($val); } } protected function _clean_input_data($str) { if (is_array($str)) { $new_array = array(); foreach (array_keys($str) as $key) { $new_array[$this->_clean_input_keys($key)] = $this->_clean_input_data($str[$key]); } return $new_array; } /* We strip slashes if magic quotes is on to keep things consistent NOTE: In PHP 5.4 get_magic_quotes_gpc() will always return 0 and it will probably not exist in future versions at all. */ if ( ! is_php('5.4') && get_magic_quotes_gpc()) { $str = stripslashes($str); } // Clean UTF-8 if supported if (UTF8_ENABLED === TRUE) { $str = $this->uni->clean_string($str); } // Remove control characters $str = remove_invisible_characters($str, FALSE); 这里看注释就能大概看出来清掉了哪些啦。 Clean UTF-8 if supported、Remove control characters function remove_invisible_characters($str, $url_encoded = TRUE) { $non_displayables = array(); // every control character except newline (dec 10), // carriage return (dec 13) and horizontal tab (dec 09) if ($url_encoded) { $non_displayables[] = '/%0[0-8bcef]/i'; // url encoded 00-08, 11, 12, 14, 15 $non_displayables[] = '/%1[0-9a-f]/i'; // url encoded 16-31 $non_displayables[] = '/%7f/i'; // url encoded 127 } $non_displayables[] = '/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]+/S'; // 00-08, 11, 12, 14-31, 127 do { $str = preg_replace($non_displayables, '', $str, -1, $count); } while ($count); return $str; } 这里应该是在清空这些字符之前就检测了字符, 所以呢 这里不止%00能绕过, %12, %80-%99之类的不少字符都能绕过。 后记 后面一开始也在想, 这题都没用ci框架那种常见的url route, 也没看到啥明显的特征提示是ci框架,大家怎么能想到是利用ci框架的这个特性来绕过呢,不过后面发现在404页面中使用的是熟悉的ci框架的404页面, 那么也就很简单了。 Copyright © 2022 WeLearn. All rights reserved. all right reserved，powered by Gitbook文章最后修改于 2022-04-04 10:25:15 "},"环境搭建/":{"url":"环境搭建/","title":"环境搭建","keywords":"","body":"环境搭建环境搭建 本模块介绍环境搭建相关的知识和总结，为了避免再次踩坑 Copyright © 2022 WeLearn. All rights reserved. all right reserved，powered by Gitbook文章最后修改于 2022-04-04 10:36:35 "},"环境搭建/Ubuntu18使用Python连接Oracle数据库.html":{"url":"环境搭建/Ubuntu18使用Python连接Oracle数据库.html","title":"Ubuntu18使用Python连接Oracle数据库","keywords":"","body":"Ubuntu18使用Python连接Oracle数据库启动oracle数据库安装基础环境安装 instantclientsqlplus连接python 连接Ubuntu18使用Python连接Oracle数据库 [原创] 启动oracle数据库 docker pull vultarget/oracle-12c-defineownpwd:latest docker run -d -p 1521:1521 -e DBCA_TOTAL_MEMORY=2048 vultarget/oracle-12c-defineownpwd:latest 安装基础环境 安装alien apt-get install alien 安装依赖 apt-get install libaio1 libaio-dev 安装 instantclient https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html 下载 oracle-instantclient19.13-basic-19.13.0.0.0-1.x86_64.rpm oracle-instantclient19.13-devel-19.13.0.0.0-1.x86_64.rpm oracle-instantclient19.13-sqlplus-19.13.0.0.0-1.x86_64.rpm P.S. 小版本可能会有差异 安装 alien -i oracle-instantclient19.13-basic-19.13.0.0.0-1.x86_64.rpm alien -i oracle-instantclient19.13-devel-19.13.0.0.0-1.x86_64.rpm alien -i oracle-instantclient19.13-sqlplus-19.13.0.0.0-1.x86_64.rpm 配置环境变量 vim /etc/profile 写入 export ORACLE_HOME=\"/usr/lib/oracle/19.13/client64\" export ORACLE_SID=\"xe\" export TNS_ADMIN=\"$ORACLE_HOME/network/admin\" export LD_LIBRARY_PATH=\"$ORACLE_HOME/lib\" export PATH=\"$ORACLE_HOME/bin:$PATH\" P.S. 注意版本和sid，根据oracle实际情况填写 配置tnsnames.ora cd /usr/lib/oracle/19.13/client64 mkdir -p network/admin cd network/admin && vim tnsnames.ora XE = (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521)) ) (CONNECT_DATA = (SERVICE_NAME = xe) ) ) 保存 sqlplus连接 sqlplus 用户名/密码@XE python 连接 https://pypi.org/project/cx-Oracle/5.3/#files 下载后，安装 测试脚本： import cx_Oracle as cx import os os.environ['NLS_LANG'] = 'SIMPLIFIED CHINESE_CHINA.UTF8' if __name__ == '__main__': con = cx.connect('system', 'xxxxxx', '127.0.0.1:1521/xe') cursor = con.cursor() cursor.execute(\"select 123 from dual\") data = cursor.fetchone() print(data) cursor.close() con.close() Copyright © 2022 WeLearn. All rights reserved. all right reserved，powered by Gitbook文章最后修改于 2022-04-04 10:39:30 "}}